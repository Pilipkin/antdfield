{"version":3,"file":"static/iframe.31afd4a3b813047fc5a3.bundle.js","sources":["webpack:///./src/components/AntdField/index.js"],"sourcesContent":["import React from 'react'\r\nimport { Field } from 'formik'\r\nimport { Input, Form } from 'antd'\r\n\r\nexport const FormItemWrapper = ({\r\n  field,\r\n  form: { touched, errors },\r\n  element = <Input />,\r\n  hidden,\r\n  layout,\r\n  onChange: _onChange,\r\n  onBlur: _onBlur,\r\n  ...rest\r\n}) => {\r\n  if (hidden) return <Input {...field} type=\"hidden\" />\r\n  /* Override Formik handlers, if custom ones were provided */\r\n  const withCustomHandlers = {\r\n    ...field,\r\n    onChange: _onChange ? _onChange : field.onChange,\r\n    onBlur: _onBlur ? _onBlur : field.onBlur,\r\n  }\r\n  /* Inject these into passed element */\r\n  const withFormikProps = React.cloneElement(element, { ...withCustomHandlers })\r\n  /* Compose props for Form.Item */\r\n  const help = touched[field.name] && errors[field.name]\r\n  const formItemProps = {\r\n    help,\r\n    validateStatus: help ? 'error': '',\r\n    ...layout,\r\n    ...rest,\r\n  }\r\n  return (\r\n    <Form.Item {...formItemProps}>\r\n      {withFormikProps}\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport const AntdField = props => <Field {...props} component={FormItemWrapper} />\r\n"],"mappings":"AAIA","sourceRoot":""}